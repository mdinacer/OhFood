{"version":3,"file":"static/js/870.1d6bcfac.chunk.js","mappings":"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","sources":["app/components/AppTextInput.tsx","app/components/AppDropzone.tsx","features/profile/ProfileForm.tsx","features/profile/ProfileSettings.tsx","features/profile/profileValidation.ts"],"sourcesContent":["import { TextField } from \"@mui/material\";\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n    label: string;\n    multiline?: boolean;\n    rows?: number;\n    type?: string;\n}\n\nexport default function AppTextInput(props: Props) {\n    const {fieldState, field} = useController({...props, defaultValue: ''})\n    return (\n        <TextField \n            {...props}\n            {...field}\n            multiline={props.multiline}\n            rows={props.rows}\n            type={props.type}\n            fullWidth\n            size={\"small\"}\n            variant='outlined'\n            error={!!fieldState.error}\n            helperText={fieldState.error?.message}\n        />\n    )\n}","import {UploadFile} from '@mui/icons-material';\nimport {Box, FormControl, FormHelperText, Typography} from '@mui/material';\nimport {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport {useController, UseControllerProps} from 'react-hook-form'\n\ninterface Props extends UseControllerProps {\n}\n\nexport default function AppDropzone(props: Props) {\n    const {fieldState, field} = useController({...props, defaultValue: null});\n\n    const dzStyles = {\n        display: 'flex',\n        border: 'dashed 3px #eee',\n        borderColor: '#eee',\n        borderRadius: '5px',\n        paddingTop: '30px',\n        alignItems: 'center',\n    }\n\n    const dzActive = {\n        borderColor: 'green'\n    }\n\n    const onDrop = useCallback(acceptedFiles => {\n        acceptedFiles[0] = Object.assign(acceptedFiles[0],\n            {preview: URL.createObjectURL(acceptedFiles[0])});\n        field.onChange(acceptedFiles[0]);\n    }, [field])\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop,  accept: 'image/*'})\n\n    return (\n        <Box  component={\"div\"} {...getRootProps()}>\n            <FormControl sx={{p:2, height:\"200px\", width:\"100%\"}} error={!!fieldState.error} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\n                <input {...getInputProps()} />\n                <UploadFile sx={{fontSize: '100px'}}/>\n                <Typography variant='h6'>Drop image here</Typography>\n                <FormHelperText>{fieldState.error?.message}</FormHelperText>\n            </FormControl>\n        </Box>\n    )\n}","import {Box, Button, Grid} from \"@mui/material\";\nimport AppTextInput from \"../../app/components/AppTextInput\";\nimport AppDropzone from \"../../app/components/AppDropzone\";\nimport {useAppDispatch, useAppSelector} from \"../../app/store/configureStore\";\nimport {FieldValues, useForm} from \"react-hook-form\";\nimport {useEffect} from \"react\";\nimport {profileValidationSchema} from \"./profileValidation\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\nimport agent from \"../../app/api/agent\";\nimport {LoadingButton} from \"@mui/lab\";\nimport {Link, useNavigate} from \"react-router-dom\";\nimport {setProfile} from \"../../app/slices/accountSlice\";\n\n\nexport default function ProfileForm() {\n    const {control, reset, handleSubmit, watch, formState: {isDirty, isSubmitting}} = useForm({\n        mode: 'all',\n        resolver: yupResolver<any>(profileValidationSchema)\n    });\n    const {profile} = useAppSelector(state => state.account);\n    const navigate = useNavigate();\n    const watchFile = watch('file', null);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (profile && !watchFile && !isDirty) reset({...profile, phone2: profile.phone2 ?? \"\"});\n        return () => {\n            if (watchFile) URL.revokeObjectURL(watchFile.preview);\n        }\n    }, [profile, reset, watchFile, isDirty]);\n\n    async function handleSubmitData(data: FieldValues) {\n        console.log(\"submitting\")\n        try {\n            agent.Profile.updateProfile(data)\n                .then(response =>\n                {\n                    dispatch(setProfile(response))\n                    navigate(\"/profile\");\n                })\n                .catch(error => console.log(error))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <Box component={\"form\"} onSubmit={handleSubmit(handleSubmitData)}>\n            <Grid container spacing={2}>\n                <Grid item md={6} xs={12}>\n                    <AppTextInput control={control} name='firstName' label='First Name'/>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                    <AppTextInput control={control} name='lastName' label='Last Name'/>\n                </Grid>\n\n                <Grid item md={6} xs={12}>\n                    <AppTextInput control={control} name='phone1' label='Mobile'/>\n                </Grid>\n\n                <Grid item md={6} xs={12}>\n                    <AppTextInput control={control} name='phone2' label='Mobile'/>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={6}>\n                            <Box sx={{\n                                width: \"100%\",\n                            }}>\n                                <AppDropzone control={control} name='file'/>\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Box sx={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                width: \"100%\",\n                                height: \"100%\"\n                            }}>\n                                {watchFile ? (\n                                    <Box component={\"img\"} sx={{borderRadius:3}} src={watchFile.preview} alt='preview' style={{maxHeight: 200}}/>\n                                ) : (\n                                    <Box component={\"img\"} sx={{borderRadius:3, objectFit:\"cover\", objectPosition:\"center\"}} src={profile?.pictureUrl} alt={profile?.firstName} style={{maxHeight: 200}}/>\n                                )}\n                            </Box>\n                        </Grid>\n\n\n                    </Grid>\n\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Box display='flex' alignItems={\"center\"}  sx={{ mt: 3, justifyContent:{xs:\"space-evenly\", md:\"flex-end\"} }}>\n                        <Button sx={{mx:1, width:{xs:\"100%\", md:\"95px\"}}} component={Link} to={\"/profile\"} variant='outlined' color='inherit'>Cancel</Button>\n                        <LoadingButton sx={{color:\"#FFF\", fontWeight:\"bold\", width:{xs:\"100%\", md:\"95px\"}}} loading={isSubmitting} type='submit' variant='contained' disableElevation color='primary'>Save</LoadingButton>\n                    </Box>\n                </Grid>\n\n            </Grid>\n        </Box>\n    )\n};\n","import {ThemeProvider} from \"@emotion/react\";\nimport {Box, Container, CssBaseline, Paper, Typography} from \"@mui/material\";\nimport {LightTheme} from \"../../app/layout/App\";\nimport {useAppSelector} from \"../../app/store/configureStore\";\nimport ProfileForm from \"./ProfileForm\";\n\nexport default function ProfileSettings() {\n    const {user, profile} = useAppSelector(state => state.account);\n\n\n    if (!user || !profile) return <div>No User</div>\n    return (\n        <ThemeProvider theme={LightTheme}>\n            <CssBaseline/>\n            <Box sx={{\n                pt: {md: \"60px\", xs: 1},\n                pb: {xs: \"60px\", md: 1},\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                minHeight: \"100vh\",\n                width: \"100%\",\n                backgroundColor: \"#EEEEEE\",\n            }}>\n                <Container sx={{\n                    px: {xs: 0, md: 7},\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    flexDirection: \"column\"\n                }}>\n                    <Paper sx={{\n                        p: 3,\n                        width: \"100%\",\n                        height: \"100%\",\n                        maxWidth: \"800px\",\n                        borderRadius: {xs: 0, md: 3},\n\n                    }}>\n                        <Typography variant=\"h6\" sx={{mb: 3}}>Profile Settings</Typography>\n                        <ProfileForm/>\n                    </Paper>\n\n\n                </Container>\n\n            </Box>\n        </ThemeProvider>\n    )\n};\n","import * as yup from 'yup';\n\nexport const profileValidationSchema = yup.object({\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    phone1: yup.string().required(),\n    phone2: yup.string(),\n    file: yup.mixed().when('pictureUrl', {\n        is: (value: string) => !value,\n        then: yup.mixed().required('Please provide an image')\n    })\n})\n\nexport const addressValidationSchema = yup.object({\n    fullName: yup.string().required(),\n    title: yup.string().required(),\n    address1: yup.string().required(),\n\n})"],"names":["AppTextInput","props","useController","defaultValue","fieldState","field","multiline","rows","type","fullWidth","size","variant","error","helperText","message","AppDropzone","dzStyles","display","border","borderColor","borderRadius","paddingTop","alignItems","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","onChange","useDropzone","accept","getRootProps","getInputProps","isDragActive","Box","component","FormControl","sx","p","height","width","style","UploadFile","fontSize","Typography","FormHelperText","ProfileForm","useForm","mode","resolver","yupResolver","profileValidationSchema","control","reset","handleSubmit","watch","formState","isDirty","isSubmitting","profile","useAppSelector","state","account","navigate","useNavigate","watchFile","dispatch","useAppDispatch","data","console","log","agent","then","response","setProfile","catch","useEffect","phone2","revokeObjectURL","onSubmit","Grid","container","spacing","item","md","xs","name","label","justifyContent","src","alt","maxHeight","objectFit","objectPosition","pictureUrl","firstName","mt","Button","mx","Link","to","color","LoadingButton","fontWeight","loading","disableElevation","ProfileSettings","user","theme","LightTheme","CssBaseline","pt","pb","minHeight","backgroundColor","Container","px","flexDirection","Paper","maxWidth","mb","yup","required","lastName","phone1","file","when","is","value","addressValidationSchema","fullName","title","address1"],"sourceRoot":""}