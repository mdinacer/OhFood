{"version":3,"file":"static/js/637.51e83ffa.chunk.js","mappings":"oQAae,SAASA,IACpB,OAAuCC,EAAAA,EAAAA,KAAe,SAACC,GAAD,OAAWA,EAAMC,YAA/DC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,gBACbC,GAAWC,EAAAA,EAAAA,MAQjB,SAASC,EAAT,GAAwC,IAAxBL,EAAuB,EAAvBA,SACZ,OACI,UAACM,EAAA,EAAD,CACIC,UAAU,iBACVC,GAAI,CACAC,SAAU,WACVC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WACZC,aAAc,CAAEC,GAAI,EAAGC,GAAI,IARnC,WAWI,SAACV,EAAA,EAAD,CACIC,UAAU,WACVU,UAAU,MACVC,IAAKlB,EAASmB,cAElB,UAACC,EAAA,EAAD,CACIb,UAAU,iBACVC,GAAI,CACAa,MAAO,QACPC,GAAI,GAJZ,WAQI,wBAAKtB,EAASuB,SACd,uBACKvB,EAASwB,oBAO9B,OAzCAC,EAAAA,EAAAA,YAAU,WACDvB,GACDC,GAASuB,EAAAA,EAAAA,QAEd,CAACxB,EAAiBC,IAqChBD,GAED,SAACI,EAAA,EAAD,CAAKC,UAAU,YAAf,UACI,UAACa,EAAA,EAAD,CAAWZ,GAAI,CAAEmB,GAAI,CAAEZ,GAAI,EAAGC,GAAI,IAAOY,SAAU,KAAnD,WACI,SAACC,EAAA,EAAD,CACIC,QAAQ,KACRtB,GAAI,CACAuB,cAAe,aAHvB,2BAQA,SAACzB,EAAA,EAAD,CAAKE,GAAI,CAAEwB,SAAU,SAAUC,GAAI,GAAnC,UACI,SAAC,IAAD,UACKhC,EAAUiC,KAAI,SAAClC,EAAUmC,GAAX,OACX,SAAC9B,EAAD,CAAcL,SAAUA,GAAbmC,gBAfN,SAACC,EAAA,EAAD,CAAkBC,QAAQ","sources":["features/home/Announces.tsx"],"sourcesContent":["import { Box, CircularProgress, Collapse, Container, Typography } from \"@mui/material\";\nimport Carousel from \"react-material-ui-carousel\";\nimport \"./Announces.scss\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { Announce } from \"../../app/models/announce\";\nimport { useEffect } from \"react\";\nimport { fetchAnnouncesAsync } from \"../../app/slices/announceSlice\";\n\ninterface ItemProps {\n    announce: Announce;\n}\n\nexport default function Announces() {\n    const { announces, announcesLoaded } = useAppSelector((state) => state.announce);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (!announcesLoaded) {\n            dispatch(fetchAnnouncesAsync())\n        }\n    }, [announcesLoaded, dispatch])\n\n    function Item({ announce }: ItemProps) {\n        return (\n            <Box\n                className=\"item-container\"\n                sx={{\n                    position: \"relative\",\n                    height: \"100%\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"flex-end\",\n                    borderRadius: { xs: 2, md: 3 },\n                }}\n            >\n                <Box\n                    className=\"item-img\"\n                    component=\"img\"\n                    src={announce.pictureUrl}\n                />\n                <Container\n                    className=\"text-container\"\n                    sx={{\n                        color: \"white\",\n                        my: 4,\n                    }}\n\n                >\n                    <h2>{announce.title}</h2>\n                    <p>\n                        {announce.description}\n                    </p>\n                </Container>\n            </Box>\n        );\n    }\n\n    if (!announcesLoaded) return <LoadingComponent message=\"Loading Services...\" />;\n    return (\n        <Box className=\"announces\">\n            <Container sx={{ pt: { xs: 2, md: 7 } }} maxWidth={\"xl\"}>\n                <Typography\n                    variant=\"h3\"\n                    sx={{\n                        textTransform: \"uppercase\",\n                    }}\n                >\n                    Our Services\n                </Typography>\n                <Box sx={{ overflow: \"hidden\", py: 3 , }}>\n                    <Carousel>\n                        {announces.map((announce, i) => (\n                            <Item key={i} announce={announce} />\n                        ))}\n                    </Carousel>\n                </Box>\n            </Container>\n        </Box>\n    );\n}\n\n"],"names":["Announces","useAppSelector","state","announce","announces","announcesLoaded","dispatch","useAppDispatch","Item","Box","className","sx","position","height","display","justifyContent","alignItems","borderRadius","xs","md","component","src","pictureUrl","Container","color","my","title","description","useEffect","fetchAnnouncesAsync","pt","maxWidth","Typography","variant","textTransform","overflow","py","map","i","LoadingComponent","message"],"sourceRoot":""}