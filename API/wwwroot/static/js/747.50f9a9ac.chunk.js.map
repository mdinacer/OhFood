{"version":3,"file":"static/js/747.50f9a9ac.chunk.js","mappings":"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","sources":["features/checkout/AddressForm.tsx","features/checkout/Review.tsx","features/checkout/CheckoutPage.tsx"],"sourcesContent":["import Typography from '@mui/material/Typography';\nimport {\n    Backdrop,\n    Box, Button,\n    Checkbox,\n    Container,\n    Fade,\n    FormControl,\n    FormControlLabel,\n    FormGroup,\n    Grid,\n    InputLabel,\n    MenuItem,\n    Modal, Paper,\n    Select,\n    Stack\n} from \"@mui/material\";\nimport {useEffect, useState} from \"react\";\nimport {ShippingAddress} from \"../../app/models/shippingAddress\";\nimport agent from \"../../app/api/agent\";\nimport {default as ModalAddressForm} from \"../profile/AddressForm\";\n\ninterface Props {\n    onItemSelected: (item: ShippingAddress | null) => void;\n    setSaveDefault: (value: boolean) => void;\n}\n\nexport default function CheckoutAddressForm({onItemSelected, setSaveDefault}: Props) {\n    const [addresses, setAddresses] = useState<ShippingAddress[]>([])\n    const [selectedAddressTitle, setSelectedAddressTitle] = useState(\"\")\n    const [selectedAddress, setSelectedAddress] = useState<ShippingAddress | null>(null)\n    const [loading, setLoading] = useState(false)\n    const [addressesLoaded, setAddressesLoaded] = useState(false)\n    const [busy, setBusy] = useState(false)\n    const [open, setOpen] = useState(false);\n\n    useEffect(() => {\n       if(!addressesLoaded){\n           setLoading(true);\n           agent.Profile.fetchAddresses()\n               .then((response: ShippingAddress[]) => {\n                   setAddressesLoaded(true)\n                   setAddresses(response);\n               })\n               .catch((e) => console.log(e))\n               .finally(() => setLoading(false));\n       }\n\n\n    }, [addressesLoaded]);\n\n    function handleSelectAddress(value: string) {\n        setSelectedAddressTitle(value)\n        const item = addresses.find(a => a.title === value);\n        setSelectedAddress(item !== undefined ? item : null);\n        onItemSelected(item !== undefined ? item : null);\n\n    }\n\n    const handleChange = (event: any) => {\n        setSaveDefault(event.target.checked);\n    };\n\n    const onSubmitForm = (data: ShippingAddress) => {\n        if (selectedAddress) {\n            setBusy(true);\n            setAddressesLoaded(false);\n            handleSelectAddress(data.title)\n            setBusy(false);\n        }\n    }\n\n    return (\n        <Box maxWidth={800} sx={{mx: \"auto\"}}>\n           <Stack direction={\"row\"} justifyContent={\"space-between\"} alignItems={\"center\"}>\n               <Typography variant=\"h6\" sx={{mb: 3}}>\n                   Shipping address\n               </Typography>\n               {addressesLoaded && addresses.length < 3 && (\n                   <Button onClick={() => setOpen(true)}>\n                       Add Address\n                   </Button>\n               )}\n           </Stack>\n            <Container>\n                {addressesLoaded && addresses.length > 0 && (\n                    <Box>\n                        <FormControl fullWidth>\n                            <InputLabel id=\"addresses-label\">Addresses</InputLabel>\n                            <Select\n                                labelId=\"addresses-label\"\n                                id=\"addresses-select\"\n                                value={selectedAddressTitle}\n                                label=\"Shipping Address\"\n                                onChange={({target}) => {\n                                    handleSelectAddress(target.value)\n                                }}\n                                name={\"shippingAddress\"}\n                            >\n                                {addresses.map(address => (\n                                    <MenuItem key={address.id}\n                                              value={address.title}>\n                                        <Box sx={{width: \"100%\"}}>\n                                            <Typography sx={{textTransform: \"uppercase\"}}\n                                                        variant={\"subtitle1\"}>{address.title}</Typography>\n                                            <Grid container spacing={1}>\n                                                <Grid item xs={12}>\n\n                                                </Grid>\n\n\n                                                <Grid item xs={6}>\n                                                    <Stack>\n                                                        <Typography variant={\"caption\"}>Full Name</Typography>\n                                                        <Typography variant={\"caption\"}>{address.fullName}</Typography>\n                                                    </Stack>\n                                                </Grid>\n\n                                                <Grid item xs={6}>\n                                                    <Stack>\n                                                        <Typography variant={\"caption\"}>Address</Typography>\n                                                        <Typography variant={\"caption\"}>{address.address1}</Typography>\n                                                    </Stack>\n                                                </Grid>\n\n\n                                            </Grid>\n                                        </Box>\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                        {selectedAddress && !selectedAddress.isDefault && (\n                            <FormGroup>\n                                <FormControlLabel onChange={handleChange} control={<Checkbox />}\n                                                  label=\"Set Default\"/>\n                            </FormGroup>\n                        )}\n                    </Box>\n                )}\n            </Container>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                open={open}\n                onClose={() => setOpen(false)}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <Paper sx={{\n                        position: 'absolute' as 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)',\n                        maxWidth: 900,\n                        minWidth: 300,\n\n                        borderRadius: 3,\n                        boxShadow: 24,\n                        py: 2,\n                        overflow: \"auto\",\n                        maxHeight: \"90vh\",\n                    }}>\n                        <ModalAddressForm onSubmit={onSubmitForm} onCancel={() => setOpen(false)} />\n\n                    </Paper>\n                </Fade>\n            </Modal>\n\n        </Box>\n    );\n}\n","import {\n  Box,\n  Container,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Stack,\n} from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport React from \"react\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport QuantityStepper from \"../../app/components/QuantityStepper\";\nimport {\n  addBasketItemAsync,\n  removeBasketItemAsync,\n} from \"../../app/slices/basketSlice\";\n\nexport default function Review() {\n  const { basket, status } = useAppSelector((state) => state.basket);\n  const subtotal =\n    basket?.items.reduce((sum, item) => sum + item.quantity * item.price, 0) ??\n    0;\n  const dispatch = useAppDispatch();\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      {basket && (\n        <List>\n          {basket.items.map((item) => (\n            <ListItem key={item.productId} sx={{ mb: 0 }}>\n              <Grid container spacing={2} rowSpacing={0}>\n                <Grid\n                  md={2}\n                  xs={0}\n                  item\n                  sx={{ overflow: \"hidden\" }}\n                  display={\"flex\"}\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                >\n                  <Box\n                    component={\"img\"}\n                    src={item.pictureUrl}\n                    alt={item.name}\n                    sx={{\n                      height: \"50px\",\n                      width: \"50px\",\n                      objectFit: \"contain\",\n                      objectPosition: \"center\",\n                    }}\n                  />\n                </Grid>\n\n                <Grid\n                  item\n                  md={5}\n                  xs={8}\n                  display={\"flex\"}\n                  alignItems={\"flex-start\"}\n                  justifyContent={\"center\"}\n                  flexDirection={\"column\"}\n                  columnGap={3}\n                >\n                  <Typography variant={\"caption\"}>{item.category}</Typography>\n                  <Typography variant={\"subtitle1\"}>{item.name}</Typography>\n                </Grid>\n\n                <Grid\n                  item\n                  md={3}\n                  xs={6}\n                  display={\"flex\"}\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                >\n                  <QuantityStepper\n                    quantity={item.quantity}\n                    increase={() =>\n                      dispatch(\n                        addBasketItemAsync({ productId: item.productId })\n                      )\n                    }\n                    decrease={() =>\n                      dispatch(\n                        removeBasketItemAsync({\n                          productId: item.productId,\n                          quantity: 1,\n                          name: \"rem\",\n                        })\n                      )\n                    }\n                    isRow={true}\n                    minValue={1}\n                    loading={status.includes(\"pending\")}\n                  />\n                </Grid>\n\n                <Grid\n                  item\n                  md={2}\n                  xs={6}\n                  sx={{ overflow: \"hidden\" }}\n                  display={\"flex\"}\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                >\n                  <Typography textAlign={\"center\"}>\n                    {currencyFormat(item.price * item.quantity, \"$\")}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </ListItem>\n          ))}\n        </List>\n      )}\n\n      <Divider />\n\n      <Grid container>\n        <Grid item md={6} xs={0} />\n        <Grid item xs={12} md={6}>\n          <Container>\n            <List dense>\n              <ListItem>\n                <Stack\n                  width={\"100%\"}\n                  direction={\"row\"}\n                  justifyContent={\"space-between\"}\n                  alignItems={\"center\"}\n                >\n                  <Typography variant=\"caption\">Subtotal</Typography>\n                  <Typography variant=\"subtitle1\">\n                    {currencyFormat(subtotal, \"$\")}\n                  </Typography>\n                </Stack>\n              </ListItem>\n              <ListItem>\n                <Stack\n                  width={\"100%\"}\n                  direction={\"row\"}\n                  justifyContent={\"space-between\"}\n                  alignItems={\"center\"}\n                >\n                  <Typography variant=\"caption\">Delivery Cost</Typography>\n                  <Typography variant=\"subtitle1\">\n                    {currencyFormat(30, \"$\")}\n                  </Typography>\n                </Stack>\n              </ListItem>\n              <ListItem>\n                <Stack\n                  width={\"100%\"}\n                  direction={\"row\"}\n                  justifyContent={\"space-between\"}\n                  alignItems={\"center\"}\n                >\n                  <Typography variant=\"caption\">Total</Typography>\n                  <Typography variant=\"subtitle1\">\n                    {currencyFormat(subtotal + 30, \"$\")}\n                  </Typography>\n                </Stack>\n              </ListItem>\n            </List>\n          </Container>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import {Box, Button, Container, Paper, Step, StepLabel, Stepper, Typography,} from \"@mui/material\";\nimport {useState} from \"react\";\nimport CheckoutAddressForm from \"./AddressForm\";\nimport Review from \"./Review\";\nimport agent from \"../../app/api/agent\";\nimport {LoadingButton} from \"@mui/lab\";\nimport {useAppDispatch} from \"../../app/store/configureStore\";\nimport \"./CheckoutPage.scss\";\nimport {clearBasket} from \"../../app/slices/basketSlice\";\nimport {Link} from \"react-router-dom\";\nimport {ShippingAddress} from \"../../app/models/shippingAddress\";\n\nconst steps = [\"Address\", \"Review\", \"Receipt\"];\n\nexport default function CheckoutPage() {\n    const [activeStep, setActiveStep] = useState(0);\n    const [selectedAddress, setSelectedAddress] = useState<ShippingAddress | null>(null);\n    const [saveDefault, setSaveDefault] = useState(false);\n    const [orderNumber, setOrderNumber] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const dispatch = useAppDispatch();\n\n    function onItemSelected(item: ShippingAddress | null) {\n        setSelectedAddress(item)\n    }\n\n    function getStepContent(step: number) {\n        switch (step) {\n            case 0:\n                return <CheckoutAddressForm onItemSelected={onItemSelected} setSaveDefault={(value => setSaveDefault(value))}/>;\n            case 1:\n                return <Review/>;\n            case 2:\n                return (\n                    <Box\n                        width={\"100%\"}\n                        height={\"100%\"}\n                        display={\"flex\"}\n                        justifyContent={\"center\"}\n                        alignItems={\"center\"}\n                    >\n                        <Typography textAlign={\"center\"}>\n                            You order has been sent, You will be notified on confirmation and\n                            delivery.\n                        </Typography>\n                    </Box>\n                );\n\n            default:\n                throw new Error(\"Unknown step\");\n        }\n    }\n\n\n    async function submitOrder() {\n        setLoading(true);\n\n        try {\n            const orderNumber = await agent.Orders.create({\n                saveAddress: saveDefault,\n                shippingAddress: selectedAddress,\n            });\n            setOrderNumber(orderNumber);\n            setActiveStep(activeStep + 1);\n            dispatch(clearBasket());\n        } catch (error) {\n            console.log(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    const handleNext = async () => {\n        if (activeStep === 1) {\n            await submitOrder();\n        } else {\n            setActiveStep(activeStep + 1);\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n\n    function submitDisabled(): boolean {\n        return selectedAddress === null;\n    }\n\n    return (\n        <Box\n            className={\"payment\"}\n            sx={{pb: {xs: 10, md: 1}, pt: {xs: 1, md: 7}}}\n        >\n            <Container>\n                <Paper\n                    variant=\"outlined\"\n                    sx={{\n                        maxWidth: 800,\n                        my: {xs: 1, md: 6},\n                        mx: \"auto\",\n                        p: {xs: 2, md: 3},\n                        backgroundColor: \"rgba(0,0,0,0.5)\",\n                    }}\n                >\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                        Order\n                    </Typography>\n                    <Stepper activeStep={activeStep} sx={{pt: 3, pb: 5}}>\n                        {steps.map((label) => (\n                            <Step key={label}>\n                                <StepLabel>{label}</StepLabel>\n                            </Step>\n                        ))}\n                    </Stepper>\n                    <>\n                        {activeStep === steps.length ? (\n                            <>\n                                <Typography variant=\"subtitle1\">\n                                    Your order number is #{orderNumber}. We have emailed your\n                                    order confirmation, and will not send you an update when\n                                    your order has shipped!\n                                </Typography>\n                            </>\n                        ) : (\n                            <Box>\n                                {getStepContent(activeStep)}\n                                <Box sx={{display: \"flex\", justifyContent: \"flex-end\"}}>\n                                    {activeStep !== 0 && (\n                                        <Button onClick={handleBack} sx={{mt: 3, ml: 1}}>\n                                            Back\n                                        </Button>\n                                    )}\n                                    {activeStep !== 2 ? (\n                                        <LoadingButton\n                                            loading={loading}\n                                            disabled={submitDisabled()}\n                                            variant=\"contained\"\n                                            onClick={() => handleNext()}\n                                            sx={{mt: 3, ml: 1}}\n                                        >\n                                            {activeStep === 1 ? \"Place order\" : \"Next\"}\n                                        </LoadingButton>\n                                    ) : (\n                                        <Button\n                                            variant=\"contained\"\n                                            sx={{mt: 3, ml: 1}}\n                                            component={Link}\n                                            to={\"/\"}\n                                        >\n                                            Home\n                                        </Button>\n                                    )}\n                                </Box>\n                            </Box>\n                        )}\n                    </>\n                </Paper>\n            </Container>\n        </Box>\n    );\n}\n"],"names":["CheckoutAddressForm","onItemSelected","setSaveDefault","useState","addresses","setAddresses","selectedAddressTitle","setSelectedAddressTitle","selectedAddress","setSelectedAddress","setLoading","addressesLoaded","setAddressesLoaded","setBusy","open","setOpen","handleSelectAddress","value","item","find","a","title","undefined","useEffect","agent","then","response","catch","e","console","log","finally","Box","maxWidth","sx","mx","Stack","direction","justifyContent","alignItems","Typography","variant","mb","length","Button","onClick","Container","FormControl","fullWidth","InputLabel","id","Select","labelId","label","onChange","target","name","map","address","MenuItem","width","textTransform","Grid","container","spacing","xs","fullName","address1","isDefault","FormGroup","FormControlLabel","event","checked","control","Checkbox","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Paper","position","top","left","transform","minWidth","borderRadius","boxShadow","py","overflow","maxHeight","onSubmit","data","onCancel","Review","useAppSelector","state","basket","status","subtotal","items","reduce","sum","quantity","price","dispatch","useAppDispatch","gutterBottom","List","ListItem","rowSpacing","md","display","component","src","pictureUrl","alt","height","objectFit","objectPosition","flexDirection","columnGap","category","QuantityStepper","increase","addBasketItemAsync","productId","decrease","removeBasketItemAsync","isRow","minValue","loading","includes","textAlign","currencyFormat","Divider","dense","steps","CheckoutPage","activeStep","setActiveStep","saveDefault","orderNumber","setOrderNumber","submitOrder","saveAddress","shippingAddress","clearBasket","handleNext","className","pb","pt","my","p","backgroundColor","align","Stepper","Step","StepLabel","step","Error","getStepContent","mt","ml","LoadingButton","disabled","Link","to"],"sourceRoot":""}