{"version":3,"file":"static/js/384.fab8c74e.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Settings.js","../node_modules/@mui/icons-material/esm/GpsFixed.js","features/profile/ProfileAddress.tsx"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z\"\n}), 'Settings');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"\n}), 'GpsFixed');","import { useEffect, useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport { Box, Button, Divider, Grid, Paper, Stack, Typography } from \"@mui/material\";\nimport { GpsFixed, Settings } from \"@mui/icons-material\";\nimport { ShippingAddress } from \"../../app/models/shippingAddress\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ProfileAddress() {\n  const [addresses, setAddresses] = useState<ShippingAddress[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [busy, setBusy] = useState(false);\n  const [addressesLoaded, setAddressesLoaded] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    agent.Profile.fetchAddresses()\n      .then((response) => {\n        setAddresses(response);\n        setAddressesLoaded(true)\n      })\n      .catch((e) => console.log(e))\n      .finally(() => setLoading(false));\n\n    return () => setAddresses([]);\n  }, []);\n\n  const setDefaultAddress = (id: number) => {\n    setBusy(true)\n    agent.Profile.setDefaultAddress(id)\n      .then(_ => {\n        const newAddresses = addresses.map(a => ({ ...a, isDefault: a.id === id }))\n        setAddresses(newAddresses)\n      })\n      .catch(error => console.log(error))\n      .finally(() => setBusy(false));\n  }\n\n  const showMessage = (message: string = \"Loading\") => (\n    <Box\n      height={\"100%\"}\n      width={\"100%\"}\n      display={\"flex\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n    >\n      <Typography variant={\"caption\"}>{message}</Typography>\n    </Box>\n  );\n\n\n\n  return (\n    <Box>\n      <Stack my={3} direction=\"row\" justifyContent={\"space-between\"} alignItems={\"center\"}>\n        <Typography variant=\"h5\" component=\"h2\" >Addresses</Typography>\n        <Button sx={{ minWidth: '110px' }} component={Link} to=\"/profile/addresses\" startIcon={<Settings />} variant=\"outlined\" color=\"inherit\" size=\"small\">\n          Manage\n        </Button>\n      </Stack>\n        {loading && showMessage(\"Loading Shipping Addresses\")}\n        {!loading && !addressesLoaded && showMessage(\"Shipping address not set\")}\n        {addressesLoaded && addresses.length > 0 && (\n            <Grid container spacing={3}>\n                {addresses.map((address) =>\n                    addressesLoaded ? (\n                            <Grid md={4} xs={12} key={address.id} item>\n                                <Paper sx={{ px: 3, pb: 1, pt: 3, height: \"100%\" }}>\n                                    <Typography variant=\"caption\">Home</Typography>\n                                    <Typography variant=\"body2\">{address.fullName} {address.isDefault && (<Typography variant=\"caption\">(Default)</Typography>)}</Typography>\n                                    <Typography variant=\"subtitle1\">{address.address1}</Typography>\n                                    <Typography variant=\"body2\">{address.town ?? address.suburb}</Typography>\n                                    <Divider sx={{ my: 1 }} />\n                                    <LoadingButton disabled={address.isDefault} loading={busy} onClick={() => setDefaultAddress(address.id)} startIcon={<GpsFixed />} variant=\"text\" color=\"inherit\" size=\"small\">\n                                        Set Default\n                                    </LoadingButton>\n                                </Paper>\n                            </Grid>\n                        ) :\n                        (\n                            <Box>\n                                <Typography>Your Address Book is Empty</Typography>\n                            </Box>\n                        ))}\n            </Grid>\n        )}\n\n    </Box>\n  );\n}\n"],"names":["createSvgIcon","_jsx","d","ProfileAddress","useState","addresses","setAddresses","loading","setLoading","busy","setBusy","addressesLoaded","setAddressesLoaded","useEffect","agent","then","response","catch","e","console","log","finally","showMessage","message","Box","height","width","display","justifyContent","alignItems","Typography","variant","Stack","my","direction","component","Button","sx","minWidth","Link","to","startIcon","Settings","color","size","length","Grid","container","spacing","map","address","md","xs","item","Paper","px","pb","pt","fullName","isDefault","address1","town","suburb","Divider","LoadingButton","disabled","onClick","id","_","newAddresses","a","error","GpsFixed"],"sourceRoot":""}