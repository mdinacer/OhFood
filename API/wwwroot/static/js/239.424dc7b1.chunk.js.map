{"version":3,"file":"static/js/239.424dc7b1.chunk.js","mappings":"qWAUe,SAASA,IAAS,IAAD,IACrBC,GAAqBC,EAAAA,EAAAA,MAArBD,MAEDE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAKIC,EAAAA,EAAAA,IAAQ,CAACC,KAAM,QAJfC,EADJ,EACIA,SACAC,EAFJ,EAEIA,aACAC,EAHJ,EAGIA,SAHJ,IAIIC,UAAYC,EAJhB,EAIgBA,aAAcC,EAJ9B,EAI8BA,OAAQC,EAJtC,EAIsCA,QATV,wCAY5B,WAA0BC,GAA1B,kGAEcX,GAASY,EAAAA,EAAAA,IAAWD,IAFlC,OAGcE,GAAY,OAALjB,QAAK,IAALA,GAAA,UAAAA,EAAOiB,YAAP,eAAaC,WAAY,IACtChB,EAASe,GAJjB,gDAMQE,QAAQC,IAAR,MANR,0DAZ4B,sBA+B5B,OARAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAK,OAAGtB,QAAH,IAAGA,OAAH,EAAGA,EAAOsB,MACjBA,IACAZ,EAAS,WAAYY,EAAMC,UAC3Bb,EAAS,WAAYY,EAAME,aAEhC,QAACxB,QAAD,IAACA,OAAD,EAACA,EAAOsB,MAAOZ,KAGd,SAAC,IAAD,CAAKe,UAAW,UAAhB,UACI,UAAC,IAAD,CAAWC,UAAWC,EAAAA,EAAOC,SAAS,KAAKH,UAAW,aAC3CI,GAAI,CAACC,QAAS,OAAQC,cAAe,SAAUC,WAAY,SAAUC,EAAG,GADnF,WAEI,SAAC,IAAD,CAAQJ,GAAI,CAACK,EAAG,EAAGC,QAAS,gBAA5B,UACI,SAAC,IAAD,OAEJ,SAAC,IAAD,CAAYT,UAAU,KAAKG,GAAI,CAACO,MAAM,SAAUC,QAAQ,KAAxD,wBAGA,UAAC,IAAD,CAAKX,UAAU,OAAOY,SAAU7B,GAzChB,8CAyC0C8B,YAAU,EAACV,GAAI,CAACW,GAAI,GAA9E,WACI,SAAC,KAAD,gBACIC,OAAO,SACPC,WAAS,EACTC,MAAM,WACNC,aAAc,MACdC,WAAS,GACLrC,EAAS,WAAY,CAACsC,SAAU,0BANxC,IAOIC,QAASlC,EAAOU,SAChByB,WAAU,OAAEnC,QAAF,IAAEA,GAAF,UAAEA,EAAQU,gBAAV,aAAE,EAAkB0B,YAElC,SAAC,KAAD,gBACIR,OAAO,SACPC,WAAS,EACTC,MAAM,WACNO,KAAK,YACD1C,EAAS,WAAY,CAACsC,SAAU,0BALxC,IAMIC,QAASlC,EAAOW,SAChBwB,WAAU,OAAEnC,QAAF,IAAEA,GAAF,UAAEA,EAAQW,gBAAV,aAAE,EAAkByB,YAElC,SAAC,IAAD,CAAeE,kBAAkB,EAC7BC,UAAWtC,EACXuC,QAASzC,EACTsC,KAAK,SACLR,WAAS,EACTL,QAAQ,YACRR,GAAI,CAACW,GAAI,EAAGc,GAAI,GANpB,wBAUA,SAAC,KAAD,CAAMC,WAAS,EAAf,UACI,SAAC,KAAD,CAAMC,MAAI,EAAV,UACI,SAAC,KAAD,CAAMC,GAAG,YAAT,SACK,kC,4CClFjC,KAAeC,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,gOACD,iB","sources":["features/account/Login.tsx","../node_modules/@mui/icons-material/esm/LockOutlined.js"],"sourcesContent":["import {Avatar, Box, Container, Grid, Paper, TextField, Typography} from \"@mui/material\";\nimport {FieldValues, useForm} from \"react-hook-form\";\nimport {signInUser} from \"../../app/slices/accountSlice\";\nimport {Link, useLocation, useNavigate} from \"react-router-dom\";\nimport {useAppDispatch} from \"../../app/store/configureStore\";\nimport {useEffect} from \"react\";\nimport {LoadingButton} from \"@mui/lab\";\nimport {LockOutlined} from '@mui/icons-material';\nimport \"./Account.scss\";\n\nexport default function Login() {\n    const {state}: any | null = useLocation();\n\n    const navigate = useNavigate();\n    const dispatch = useAppDispatch();\n    const {\n        register,\n        handleSubmit,\n        setValue,\n        formState: {isSubmitting, errors, isValid},\n    } = useForm({mode: \"all\"});\n\n    async function submitForm(data: FieldValues) {\n        try {\n            await dispatch(signInUser(data));\n            const from = state?.from?.pathname || \"/\";\n            navigate(from);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n\n    useEffect(() => {\n        const login = state?.login;\n        if (login) {\n            setValue(\"username\", login.username);\n            setValue(\"password\", login.password);\n        }\n    }, [state?.login, setValue]);\n\n    return (\n        <Box className={\"account\"}>\n            <Container component={Paper} maxWidth=\"sm\" className={\"login-form\"}\n                       sx={{display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4}}>\n                <Avatar sx={{m: 1, bgcolor: 'primary.main'}}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" sx={{color:\"white\"}} variant=\"h5\">\n                   Connexion\n                </Typography>\n                <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{mt: 1}}>\n                    <TextField\n                        margin=\"normal\"\n                        fullWidth\n                        label=\"Username\"\n                        autoComplete={\"off\"}\n                        autoFocus\n                        {...register('username', {required: 'Username is required'})}\n                        error={!!errors.username}\n                        helperText={errors?.username?.message}\n                    />\n                    <TextField\n                        margin=\"normal\"\n                        fullWidth\n                        label=\"Password\"\n                        type=\"password\"\n                        {...register('password', {required: 'Password is required'})}\n                        error={!!errors.password}\n                        helperText={errors?.password?.message}\n                    />\n                    <LoadingButton disableElevation={true}\n                        disabled={!isValid}\n                        loading={isSubmitting}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{mt: 3, mb: 2}}\n                    >\n                        Connecter\n                    </LoadingButton>\n                    <Grid container>\n                        <Grid item>\n                            <Link to='/register' >\n                                {\"Inscrivez vous.\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n        </Box>\n    )\n}","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');"],"names":["Login","state","useLocation","navigate","useNavigate","dispatch","useAppDispatch","useForm","mode","register","handleSubmit","setValue","formState","isSubmitting","errors","isValid","data","signInUser","from","pathname","console","log","useEffect","login","username","password","className","component","Paper","maxWidth","sx","display","flexDirection","alignItems","p","m","bgcolor","color","variant","onSubmit","noValidate","mt","margin","fullWidth","label","autoComplete","autoFocus","required","error","helperText","message","type","disableElevation","disabled","loading","mb","container","item","to","createSvgIcon","_jsx","d"],"sourceRoot":""}