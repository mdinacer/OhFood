{"version":3,"file":"static/js/302.d54850e9.chunk.js","mappings":"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","sources":["app/components/AppDialog.tsx","../node_modules/@mui/icons-material/esm/Delete.js","features/profile/AddressForm.tsx","features/profile/AddressBook.tsx","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\nimport { TransitionProps } from '@mui/material/transitions';\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & {\n        children: React.ReactElement<any, any>;\n    },\n    ref: React.Ref<unknown>,\n) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ninterface Props {\n    open: boolean;\n    okText?: string | null;\n    cancelText?: string | null;\n    title: string;\n    body: string;\n    onClose: (value: boolean) => void;\n    onCloseAsync?: () => Promise<boolean>;\n}\n\nexport default function AppDialog({ open, title, body, okText = \"Ok\", cancelText = \"Cancel\", onClose }: Props) {\n    return (\n        <>\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={onClose}\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        {body}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button size=\"small\" variant=\"outlined\" onClick={() => onClose(false)}>{cancelText}</Button>\n                    <Button size=\"small\" variant=\"contained\" onClick={() => onClose(true)}>{okText}</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import { LoadingButton } from \"@mui/lab\";\nimport { Box, Button, Container, TextField } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { useForm, FieldValues } from \"react-hook-form\";\nimport agent from \"../../app/api/agent\";\nimport { ShippingAddress } from \"../../app/models/shippingAddress\";\n\ninterface Props {\n    address?: ShippingAddress | null;\n    onCancel: (value: boolean) => void;\n    onSubmit: (data: any) => void;\n}\n\nexport default function AddressForm({ address, onCancel, onSubmit }: Props) {\n    const {\n        register,\n        handleSubmit,\n        reset,\n        setValue,\n        formState: { isSubmitting, errors, isValid },\n    } = useForm({ mode: \"all\" });\n\n    useEffect(() => {\n        if (address) {\n            setValue(\"fullName\", address.fullName);\n            setValue(\"address1\", address.address1);\n            setValue(\"city\", address.city);\n        }\n    }, [address, setValue])\n\n    async function submitForm(data: FieldValues) {\n        try {\n            const item = { ...data, id: address ? address.id : 0, isDefault: false }\n            if (address) {\n                await agent.Profile.updateAddress(item);\n            } else {\n                await agent.Profile.createAddress(item);\n            }\n            onSubmit(item);\n            reset();\n        } catch (error) {\n            console.log(error);\n        } finally {\n            onCancel(false);\n        }\n    }\n\n    const handleCancel = () => {\n        reset();\n        onCancel(false);\n    }\n\n    return (\n        <Container>\n            <Box\n                component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}\n            >\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Full Name\"\n                    autoComplete={\"off\"}\n                    {...register('fullName', { required: 'Full Name is required' })}\n                    error={!!errors.fullName}\n                    helperText={errors?.fullName?.message}\n                />\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Address\"\n                    autoComplete={\"off\"}\n                    {...register('address1', { required: 'Address is required' })}\n                    error={!!errors.address1}\n                    helperText={errors?.address1?.message}\n                />\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"City\"\n                    autoComplete={\"off\"}\n                    {...register('city', { required: 'City is required' })}\n                    error={!!errors.city}\n                    helperText={errors?.city?.message}\n                />\n\n                <LoadingButton\n                    loading={isSubmitting}\n                    disabled={!isValid}\n                    type=\"submit\"\n                    fullWidth\n                    disableElevation\n                    variant=\"contained\"\n                    sx={{ mt: 2 }}\n                >\n                    Save\n                </LoadingButton>\n                <Button fullWidth onClick={handleCancel} color=\"inherit\"\n                    variant=\"outlined\"\n                    sx={{ mt: 1, mb: 2 }}>\n                    Cancel\n                </Button>\n            </Box>\n        </Container>\n    )\n}","import { Delete, Edit } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport {\n    Backdrop,\n    Box,\n    Button,\n    Container,\n    CssBaseline,\n    Divider,\n    Fade,\n    Grid,\n    Modal,\n    Paper,\n    Stack,\n    ThemeProvider,\n    Typography,\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport agent from \"../../app/api/agent\";\nimport AppDialog from \"../../app/components/AppDialog\";\nimport { LightTheme } from \"../../app/layout/App\";\nimport { ShippingAddress } from \"../../app/models/shippingAddress\";\nimport AddressForm from \"./AddressForm\";\n\nconst style = {\n    position: 'absolute' as 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    maxWidth: 400,\n    minWidth: 300,\n    bgcolor: 'background.paper',\n    borderRadius: 3,\n    boxShadow: 24,\n    py: 2,\n};\n\nexport default function AddressBook() {\n    const [addresses, setAddresses] = useState<ShippingAddress[]>([]);\n    const [loading, setLoading] = useState(false);\n    const [busy, setBusy] = useState(false);\n    const [open, setOpen] = useState({\n        addressForm: false,\n        deleteDialog: false\n    });\n    const [selectedAddress, setSelectedAddress] = useState<ShippingAddress | null>(null);\n\n    useEffect(() => {\n        setLoading(true);\n        agent.Profile.fetchAddresses()\n            .then((response) => {\n                setAddresses(response);\n            })\n            .catch((e) => console.log(e))\n            .finally(() => setLoading(false));\n\n        return () => setAddresses([]);\n    }, []);\n\n\n    const toggleAddressForm = (value: boolean) => setOpen({ ...open, addressForm: value });\n    const toggleDeleteDialog = (value: boolean) => setOpen({ ...open, deleteDialog: value });\n\n\n\n    function handleDialogOnClose(value: boolean) {\n        toggleDeleteDialog(false);\n        if (value && selectedAddress) {\n            console.log(\"Deleting Address\");\n            handleDeleteAddress(selectedAddress.id);\n        }\n\n    }\n\n    const handleDeleteAddress = (id: number) => {\n        setBusy(true);\n        agent.Profile.deleteAddress(id)\n            .then(_ => {\n                setAddresses(addresses.filter(a => a.id !== id));\n            })\n            .catch(e => console.log(e))\n            .finally(() => {\n                setSelectedAddress(null);\n                setBusy(false);\n            });\n    }\n\n    const onSubmitForm = (data: any) => {\n        if (selectedAddress) {\n            setBusy(true);\n            const index = addresses.indexOf(selectedAddress);\n            const newItems = addresses;\n            newItems[index] = { ...data };\n            setAddresses(newItems);\n            setBusy(false);\n        }\n    }\n\n    const setDefaultAddress = (id: number) => {\n        setBusy(true)\n        agent.Profile.setDefaultAddress(id)\n            .then(_ => {\n                const newAddresses = addresses.map(a => ({ ...a, isDefault: a.id === id }))\n                setAddresses(newAddresses)\n            })\n            .catch(error => console.log(error))\n            .finally(() => setBusy(false));\n    }\n\n    const showMessage = (message: string = \"Loading\") => (\n        <Box\n            height={\"100%\"}\n            width={\"100%\"}\n            display={\"flex\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n        >\n            <Typography variant={\"caption\"}>{message}</Typography>\n        </Box>\n    );\n\n    return (\n        <ThemeProvider theme={LightTheme}>\n            <CssBaseline />\n            <Box\n                sx={{\n                    height: \"100%\",\n                    width: \"100%\",\n                    backgroundColor: \"#EEEEEE\",\n                    minHeight: \"100Vh\",\n                    color: \"black\",\n                }}\n            >\n                <Container sx={{ py: { md: 5, xs: 2 }, pt: { md: 10, xs: 2 } }}>\n                    <Stack sx={{ width: \"100%\", pb: 4 }} display={\"flex\"} flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n                        <Typography\n                            variant={\"h4\"}\n                            component={\"h1\"}\n                            sx={{ textTransform: \"uppercase\" }}\n                        >\n                            Address Book\n                        </Typography>\n\n                        <Button variant=\"text\" color=\"inherit\" size=\"small\" component={Link} to=\"/profile\">\n                            Back to profile\n                        </Button>\n                    </Stack>\n                    {loading && addresses.length === 0 && showMessage(\"Loading Addresses\")}\n                    {!loading && addresses.length === 0 && showMessage(\"Your address book is empty\")}\n\n                    {addresses.length > 0 && (\n                        <Container>\n                            <Grid container spacing={2}>\n                                {addresses.map((address) => (\n                                    <Grid key={address.id} item md={4} xs={12}>\n                                        <Paper sx={{ py: 2, height: \"100%\" }}>\n                                            <Container sx={{\n                                                display: \"flex\",\n                                                flexDirection: \"column\",\n                                                height: \"100%\"\n\n                                            }}>\n                                                <Stack sx={{ flex: \"0 1 auto\" }}>\n                                                    <Typography variant={\"caption\"}>Name</Typography>\n                                                    <Typography variant={\"body2\"} gutterBottom>{address.fullName}</Typography>\n                                                </Stack>\n                                                <Stack sx={{ flex: \"1 1 auto\", height: \"100%\" }}>\n                                                    <Typography variant={\"caption\"}>Address</Typography>\n                                                    <Typography variant={\"subtitle1\"} gutterBottom>{address.address1}</Typography>\n                                                </Stack>\n                                                <Stack sx={{ flex: \"0 1 auto\" }}>\n                                                    <Typography variant={\"caption\"}>City</Typography>\n                                                    <Typography variant={\"body1\"} gutterBottom>{address.city}</Typography>\n                                                </Stack>\n                                                <Divider />\n                                                <Stack direction=\"row\" sx={{ flex: \"0 1 auto\" }} justifyContent={\"space-between\"}>\n                                                    <LoadingButton loading={busy} disabled={address.isDefault} size=\"small\" color=\"inherit\" variant=\"text\"\n                                                        onClick={() => setDefaultAddress(address.id)}>Set Default</LoadingButton>\n                                                    <LoadingButton loading={busy} startIcon={<Edit />} size=\"small\" color=\"inherit\" variant=\"text\" onClick={() => {\n                                                        setSelectedAddress(address);\n                                                        toggleAddressForm(true);\n                                                    }}>Edit</LoadingButton>\n                                                    <LoadingButton loading={busy} disabled={address.isDefault}\n                                                        startIcon={<Delete />} size=\"small\"\n                                                        color=\"error\"\n                                                        variant=\"text\"\n                                                        onClick={() => {\n                                                            setSelectedAddress(address);\n                                                            toggleDeleteDialog(true);\n                                                        }}>Delete</LoadingButton>\n                                                </Stack>\n\n                                            </Container>\n                                        </Paper>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </Container>\n                    )}\n                </Container>\n\n                <>\n                    <Modal\n                        aria-labelledby=\"transition-modal-title\"\n                        aria-describedby=\"transition-modal-description\"\n                        open={open.addressForm}\n                        onClose={() => toggleAddressForm(false)}\n                        closeAfterTransition\n                        BackdropComponent={Backdrop}\n                        BackdropProps={{\n                            timeout: 500,\n                        }}\n                    >\n                        <Fade in={open.addressForm}>\n                            <Box sx={style}>\n                                <AddressForm onSubmit={onSubmitForm} onCancel={toggleAddressForm} address={selectedAddress} />\n                            </Box>\n                        </Fade>\n                    </Modal>\n\n                    <AppDialog\n                        open={open.deleteDialog}\n                        title=\"Delete Address\"\n                        onClose={handleDialogOnClose}\n                        body={\"Are you sure you want to delete this element?\"}\n                    />\n                </>\n            </Box>\n        </ThemeProvider >\n    );\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');"],"names":["Transition","React","props","ref","direction","AppDialog","open","title","body","okText","cancelText","onClose","TransitionComponent","keepMounted","id","size","variant","onClick","createSvgIcon","_jsx","d","AddressForm","address","onCancel","onSubmit","useForm","mode","register","handleSubmit","reset","setValue","formState","isSubmitting","errors","isValid","data","item","isDefault","agent","console","log","useEffect","fullName","address1","city","Container","Box","component","noValidate","sx","mt","TextField","margin","fullWidth","label","autoComplete","required","error","helperText","message","LoadingButton","loading","disabled","type","disableElevation","Button","color","mb","style","position","top","left","transform","maxWidth","minWidth","bgcolor","borderRadius","boxShadow","py","AddressBook","useState","addresses","setAddresses","setLoading","busy","setBusy","addressForm","deleteDialog","setOpen","selectedAddress","setSelectedAddress","then","response","catch","e","finally","toggleAddressForm","value","toggleDeleteDialog","handleDeleteAddress","_","filter","a","showMessage","height","width","display","justifyContent","alignItems","Typography","ThemeProvider","theme","LightTheme","CssBaseline","backgroundColor","minHeight","md","xs","pt","Stack","pb","flexDirection","textTransform","Link","to","length","Grid","container","spacing","map","Paper","flex","gutterBottom","Divider","newAddresses","startIcon","Edit","Delete","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","index","indexOf","newItems"],"sourceRoot":""}