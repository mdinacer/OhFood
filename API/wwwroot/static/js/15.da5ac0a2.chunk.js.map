{"version":3,"file":"static/js/15.da5ac0a2.chunk.js","mappings":"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","sources":["app/components/AppDialog.tsx","features/profile/AddressBook.tsx","../node_modules/@mui/material/Alert/Alert.js","../node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","../node_modules/@mui/material/Alert/alertClasses.js","../node_modules/@mui/material/internal/svg-icons/Close.js"],"sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\nimport { TransitionProps } from '@mui/material/transitions';\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & {\n        children: React.ReactElement<any, any>;\n    },\n    ref: React.Ref<unknown>,\n) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ninterface Props {\n    open: boolean;\n    okText?: string | null;\n    cancelText?: string | null;\n    title: string;\n    body: string;\n    onClose: (value: boolean) => void;\n    onCloseAsync?: () => Promise<boolean>;\n}\n\nexport default function AppDialog({ open, title, body, okText = \"Ok\", cancelText = \"Cancel\", onClose }: Props) {\n    return (\n        <>\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={onClose}\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        {body}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button size=\"small\" variant=\"outlined\" onClick={() => onClose(false)}>{cancelText}</Button>\n                    <Button size=\"small\" variant=\"contained\" onClick={() => onClose(true)}>{okText}</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}","import {LoadingButton} from \"@mui/lab\";\nimport {\n    Backdrop,\n    Box,\n    Button,\n    Container,\n    Divider,\n    Fade,\n    Grid,\n    IconButton,\n    Modal,\n    Paper,\n    Stack,\n    Typography,\n} from \"@mui/material\";\nimport {useEffect, useState} from \"react\";\nimport agent from \"../../app/api/agent\";\nimport AppDialog from \"../../app/components/AppDialog\";\nimport {ShippingAddress} from \"../../app/models/shippingAddress\";\nimport AddressForm from \"./AddressForm\";\nimport {Close} from \"@mui/icons-material\";\nimport {Link} from \"react-router-dom\";\n\nconst style = {\n    position: 'absolute' as 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    maxWidth: 900,\n    minWidth: 300,\n    bgcolor: 'background.paper',\n    borderRadius: 3,\n    boxShadow: 24,\n    py: 2,\n    overflow: \"auto\",\n    maxHeight: \"90vh\",\n};\n\nexport default function AddressBook() {\n    const [addresses, setAddresses] = useState<ShippingAddress[]>([]);\n    const [loading, setLoading] = useState(false);\n    const [busy, setBusy] = useState(false);\n    const [open, setOpen] = useState({\n        addressForm: false,\n        deleteDialog: false\n    });\n    const [selectedAddress, setSelectedAddress] = useState<ShippingAddress | null>(null);\n\n    useEffect(() => {\n        setLoading(true);\n        agent.Profile.fetchAddresses()\n            .then((response) => {\n                setAddresses(response);\n            })\n            .catch((e) => console.log(e))\n            .finally(() => setLoading(false));\n\n        return () => setAddresses([]);\n    }, []);\n\n\n    const toggleAddressForm = (value: boolean) => setOpen({...open, addressForm: value});\n    const toggleDeleteDialog = (value: boolean) => setOpen({...open, deleteDialog: value});\n\n\n    function handleDialogOnClose(value: boolean) {\n        toggleDeleteDialog(false);\n        if (value && selectedAddress) {\n            console.log(\"Deleting Address\");\n            handleDeleteAddress(selectedAddress.id);\n        }\n\n    }\n\n    const handleDeleteAddress = (id: number) => {\n        setBusy(true);\n        agent.Profile.deleteAddress(id)\n            .then(_ => {\n                setAddresses(addresses.filter(a => a.id !== id));\n            })\n            .catch(e => console.log(e))\n            .finally(() => {\n                setSelectedAddress(null);\n                setBusy(false);\n            });\n    }\n\n    const onSubmitForm = (data: any) => {\n        if (selectedAddress) {\n            setBusy(true);\n            const index = addresses.indexOf(selectedAddress);\n            const newItems = addresses;\n            newItems[index] = {...data};\n            setAddresses(newItems);\n            setBusy(false);\n        }\n    }\n\n    const setDefaultAddress = (id: number) => {\n        setBusy(true)\n        agent.Profile.setDefaultAddress(id)\n            .then(_ => {\n                const newAddresses = addresses.map(a => ({...a, isDefault: a.id === id}))\n                setAddresses(newAddresses)\n            })\n            .catch(error => console.log(error))\n            .finally(() => setBusy(false));\n    }\n\n    const showMessage = (message: string = \"Loading\") => (\n        <Box\n            height={\"100%\"}\n            width={\"100%\"}\n            display={\"flex\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n        >\n            <Typography variant={\"caption\"}>{message}</Typography>\n        </Box>\n    );\n\n    return (\n        <>\n            <Box sx={{\n                pt: {xs: 0, md: \"60px\"},\n                pb: {md: 0, xs: \"60px\"},\n                height: \"100%\",\n                width: \"100%\",\n                minHeight: \"100Vh\",\n            }}>\n                <Container sx={{height: \"100%\"}}>\n                    <Stack direction={\"row\"} sx={{width: \"100%\", py: 5}} alignItems={\"center\"}\n                           justifyContent={\"space-between\"}>\n                        <Typography variant={\"h5\"} component={\"h1\"}> Delivery Addresses</Typography>\n                        <Button size={\"small\"} variant={\"text\"} color={\"inherit\"} component={Link} to={\"/profile\"}>\n                            Back to Profile\n                        </Button>\n                    </Stack>\n\n                    <Grid container spacing={3}>\n                        {addresses.map(address => (\n                            <Grid key={address.id} item xs={12} md={4}>\n                                <Paper\n                                    sx={{p: 3, pb: 1, borderRadius: 4, position: \"relative\", height: \"100%\"}}>\n                                    <IconButton\n                                        size={\"small\"}\n                                        disabled={address.isDefault}\n                                        sx={{\n                                            position: \"absolute\",\n                                            top: 0,\n                                            right: 0,\n                                            m: 1,\n                                        }}\n                                        onClick={() => {\n                                            setSelectedAddress(address);\n                                            toggleDeleteDialog(true);\n                                        }}\n                                    >\n                                        <Close/>\n                                    </IconButton>\n                                    <Box sx={{\n                                        display: \"flex\",\n                                        flexDirection: \"column\",\n                                        alignItems: \"flex-start\",\n                                        justifyContent: \"center\"\n                                    }}>\n                                        <Typography gutterBottom sx={{flex: \"0 1 auto\", textTransform: \"uppercase\"}}\n                                                    variant={\"caption\"}>{address.title} {address.isDefault && \"(Default)\"}</Typography>\n                                        <Typography sx={{flex: \"0 1 auto\"}}\n                                                    variant={\"body2\"}>{address.fullName}</Typography>\n                                        <Typography sx={{flex: \"1 1 auto\"}}\n                                                    variant={\"subtitle1\"}>{address.address1}</Typography>\n                                        <Typography sx={{flex: \"0 1 auto\"}}\n                                                    variant={\"body2\"}>{address.town ?? address.suburb}</Typography>\n\n                                        <Divider flexItem sx={{my: 1}}/>\n\n                                        <Stack direction={\"row\"} justifyContent={\"space-evenly\"}\n                                               alignItems={\"center\"} width={\"100%\"}>\n                                            <Button\n                                                onClick={() => {\n                                                    setSelectedAddress(address);\n                                                    toggleAddressForm(true);\n                                                }}\n                                                color={\"inherit\"} fullWidth={address.isDefault} variant={\"text\"}\n                                                size={\"small\"}>\n                                                Edit\n                                            </Button>\n                                            {!address.isDefault && (\n                                                <LoadingButton loading={busy}\n                                                               onClick={() => setDefaultAddress(address.id)}\n                                                               color={\"inherit\"} variant={\"text\"} size={\"small\"}>\n                                                    Set Default\n                                                </LoadingButton>\n                                            )}\n                                        </Stack>\n                                    </Box>\n                                </Paper>\n                            </Grid>\n                        ))}\n\n                        {addresses.length < 3 && (\n                            <Grid item xs={12} md={4}>\n                                <Box component={Paper} height={\"100%\"} minHeight={\"140px\"} justifyContent={\"center\"}\n                                     alignItems={\"center\"}\n                                     display={\"flex\"} elevation={0} sx={{p: 3, borderRadius: 4}}>\n                                    <Button variant={\"text\"} color={\"inherit\"} onClick={() => {\n                                        setSelectedAddress(null);\n                                        toggleAddressForm(true);\n                                    }}>\n                                        New Address\n                                    </Button>\n                                </Box>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Container>\n            </Box>\n\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                open={open.addressForm}\n                onClose={() => toggleAddressForm(false)}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open.addressForm}>\n                    <Paper sx={style}>\n                        <AddressForm onSubmit={onSubmitForm} onCancel={toggleAddressForm}\n                                     address={selectedAddress}/>\n\n                    </Paper>\n                </Fade>\n            </Modal>\n\n            <AppDialog\n                open={open.deleteDialog}\n                title=\"Delete Address\"\n                onClose={handleDialogOnClose}\n                body={\"Are you sure you want to delete this element?\"}\n            />\n\n        </>\n\n    );\n}\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _CloseIcon;\n\nconst _excluded = [\"action\", \"children\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, lighten } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nimport alertClasses, { getAlertUtilityClass } from './alertClasses';\nimport IconButton from '../IconButton';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\n\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  const color = ownerState.color || ownerState.severity;\n  return _extends({}, theme.typography.body2, {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px'\n  }, color && ownerState.variant === 'standard' && {\n    color: getColor(theme.palette[color].light, 0.6),\n    backgroundColor: getBackgroundColor(theme.palette[color].light, 0.9),\n    [`& .${alertClasses.icon}`]: {\n      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light\n    }\n  }, color && ownerState.variant === 'outlined' && {\n    color: getColor(theme.palette[color].light, 0.6),\n    border: `1px solid ${theme.palette[color].light}`,\n    [`& .${alertClasses.icon}`]: {\n      color: theme.palette.mode === 'dark' ? theme.palette[color].main : theme.palette[color].light\n    }\n  }, color && ownerState.variant === 'filled' && {\n    color: '#fff',\n    fontWeight: theme.typography.fontWeightMedium,\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main\n  });\n});\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n\n  const {\n    action,\n    children,\n    className,\n    closeText = 'Close',\n    color,\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = 'alert',\n    severity = 'success',\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    severity,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AlertRoot, _extends({\n    role: role,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(IconButton, {\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose,\n        children: _CloseIcon || (_CloseIcon = /*#__PURE__*/_jsx(CloseIcon, {\n          fontSize: \"small\"\n        }))\n      })\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');"],"names":["Transition","React","props","ref","direction","AppDialog","open","title","body","okText","cancelText","onClose","TransitionComponent","keepMounted","id","size","variant","onClick","style","position","top","left","transform","maxWidth","minWidth","bgcolor","borderRadius","boxShadow","py","overflow","maxHeight","AddressBook","useState","addresses","setAddresses","setLoading","busy","setBusy","addressForm","deleteDialog","setOpen","selectedAddress","setSelectedAddress","useEffect","agent","then","response","catch","e","console","log","finally","toggleAddressForm","value","toggleDeleteDialog","handleDeleteAddress","_","filter","a","sx","pt","xs","md","pb","height","width","minHeight","alignItems","justifyContent","component","color","Link","to","container","spacing","map","address","item","p","disabled","isDefault","right","m","display","flexDirection","gutterBottom","flex","textTransform","fullName","address1","town","suburb","flexItem","my","fullWidth","loading","newAddresses","error","length","Paper","elevation","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","in","onSubmit","data","index","indexOf","newItems","onCancel","_CloseIcon","createSvgIcon","_jsx","d","_excluded","AlertRoot","styled","name","slot","overridesResolver","styles","ownerState","root","capitalize","severity","theme","getColor","palette","mode","darken","lighten","getBackgroundColor","_extends","typography","body2","backgroundColor","padding","light","alertClasses","main","border","fontWeight","fontWeightMedium","dark","AlertIcon","icon","marginRight","fontSize","opacity","AlertMessage","message","AlertAction","action","marginLeft","defaultIconMapping","success","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","ErrorOutlineIcon","info","InfoOutlinedIcon","inProps","useThemeProps","children","className","closeText","iconMapping","role","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","getAlertUtilityClass","useUtilityClasses","_jsxs","clsx","IconButton","CloseIcon","generateUtilityClass","generateUtilityClasses"],"sourceRoot":""}