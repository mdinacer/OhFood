{"version":3,"file":"static/js/121.ae10f943.chunk.js","mappings":"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","sources":["app/components/AppTextInput.tsx","features/account/accountValidation.ts","features/account/Register.tsx","../node_modules/@hookform/resolvers/yup/src/yup.ts","../node_modules/@mui/icons-material/esm/LockOutlined.js","../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/Avatar.js","../node_modules/@mui/material/Avatar/avatarClasses.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n    label: string;\n    multiline?: boolean;\n    rows?: number;\n    type?: string;\n}\n\nexport default function AppTextInput(props: Props) {\n    const {fieldState, field} = useController({...props, defaultValue: ''})\n    return (\n        <TextField \n            {...props}\n            {...field}\n            multiline={props.multiline}\n            rows={props.rows}\n            type={props.type}\n            fullWidth\n            size={\"small\"}\n            variant='outlined'\n            error={!!fieldState.error}\n            helperText={fieldState.error?.message}\n        />\n    )\n}","import * as yup from 'yup';\n\nexport const registerValidationSchema = yup.object().shape({\n    user: yup.object().shape({\n        username: yup.string().required('Full name is required'),\n        email: yup.string().email().required('Email is required'),\n        password: yup.string()\n            .required('Password is required')\n            .matches(\n                /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/,\n                \"Password must at least 8 characters long and must contain: \" +\n                \"one uppercase,one lowercase and one alphanumeric character.\"),\n\n    }),\n\n    profile: yup.object().shape({\n        firstName: yup.string().required(),\n        lastName: yup.string().required(),\n        phone1: yup.string().required(),\n        phone2: yup.string(),\n    }),\n\n\n    passwordConfirmation: yup.string().oneOf([yup.ref('user.password'), null], 'Passwords must match'),\n\n\n});","import {Avatar, Box, Container, Grid, Paper, Typography} from \"@mui/material\";\nimport {FieldValues, useForm} from \"react-hook-form\";\nimport {useNavigate} from \"react-router-dom\";\nimport {LoadingButton} from \"@mui/lab\";\nimport {LockOutlined} from '@mui/icons-material';\nimport \"./Account.scss\";\nimport {yupResolver} from \"@hookform/resolvers/yup/dist/yup\";\nimport {registerValidationSchema} from \"./accountValidation\";\nimport AppTextInput from \"../../app/components/AppTextInput\";\nimport {toast} from \"react-toastify\";\nimport agent from \"../../app/api/agent\";\n\nexport default function Register() {\n    const navigate = useNavigate();\n    const {handleSubmit, control, formState: {isValid, isSubmitting}} = useForm({\n        mode: 'all',\n        resolver: yupResolver(registerValidationSchema),\n    });\n\n    function handleOnSubmit(data: FieldValues) {\n        const {passwordConfirmation, user, profile} = data;\n\n\n        const userItem = {\n            ...user,\n            \"profile.firstName\": profile.firstName,\n            \"profile.lastName\": profile.lastName,\n            \"profile.phone1\": profile.phone1,\n            \"profile.phone2\": profile.phone2,\n        };\n\n        console.log(userItem)\n        agent.Account.register(userItem)\n            .then(() => {\n                toast.success('Registration successful - you can now login');\n                navigate('/login');\n            })\n            .catch(error => console.log(\"error from here\", error))\n    }\n\n\n    return (\n        <Box className={\"account\"}>\n\n            <Container className={\"login-form\"} component={Paper} maxWidth=\"sm\"\n                       sx={{display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4}}>\n                <Avatar sx={{m: 1, bgcolor: 'primary.main'}}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\" sx={{color: \"white\"}}>\n                    Create Account\n                </Typography>\n                <Box component={\"form\"} onSubmit={handleSubmit(handleOnSubmit)}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <AppTextInput control={control} name='user.username' label='User name'/>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <AppTextInput control={control} name='user.email' label='Email'/>\n                        </Grid>\n\n                        <Grid item xs={12} md={6}>\n                            <AppTextInput control={control} name='profile.firstName' label='First name'/>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <AppTextInput control={control} name='profile.lastName' label='Last name'/>\n                        </Grid>\n\n                        <Grid item xs={12} md={6}>\n                            <AppTextInput control={control} name='profile.phone1' label='Mobile'/>\n                        </Grid>\n\n                        <Grid item xs={12} md={6}>\n                            <AppTextInput control={control} name='profile.phone2' label='Mobile 2nd'/>\n                        </Grid>\n\n\n                        <Grid item xs={12}>\n                            <AppTextInput type={\"password\"} control={control} name='user.password' label='Password'/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <AppTextInput type={\"password\"} control={control} name='passwordConfirmation'\n                                          label='Confirm Password'/>\n                        </Grid>\n\n                        <Grid item xs={12} md={12}>\n                            <LoadingButton\n                                disabled={!isValid}\n                                loading={isSubmitting}\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                sx={{mt: 3, mb: 2}}\n                            >\n                                Register\n                            </LoadingButton>\n                        </Grid>\n\n                    </Grid>\n                </Box>\n            </Container>\n        </Box>\n    )\n}","import Yup from 'yup';\nimport { toNestError, validateFieldsNatively } from '@hookform/resolvers';\nimport { appendErrors, FieldError } from 'react-hook-form';\nimport { Resolver } from './types';\n\n/**\n * Why `path!` ? because it could be `undefined` in some case\n * https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n */\nconst parseErrorSchema = (\n  error: Yup.ValidationError,\n  validateAllFieldCriteria: boolean,\n) => {\n  return (error.inner || []).reduce<Record<string, FieldError>>(\n    (previous, error) => {\n      if (!previous[error.path!]) {\n        previous[error.path!] = { message: error.message, type: error.type! };\n      }\n\n      if (validateAllFieldCriteria) {\n        const types = previous[error.path!].types;\n        const messages = types && types[error.type!];\n\n        previous[error.path!] = appendErrors(\n          error.path!,\n          validateAllFieldCriteria,\n          previous,\n          error.type!,\n          messages\n            ? ([] as string[]).concat(messages as string[], error.message)\n            : error.message,\n        ) as FieldError;\n      }\n\n      return previous;\n    },\n    {},\n  );\n};\n\nexport const yupResolver: Resolver =\n  (schema, schemaOptions = {}, resolverOptions = {}) =>\n  async (values, context, options) => {\n    try {\n      if (schemaOptions.context && process.env.NODE_ENV === 'development') {\n        // eslint-disable-next-line no-console\n        console.warn(\n          \"You should not used the yup options context. Please, use the 'useForm' context object instead\",\n        );\n      }\n\n      const result = await schema[\n        resolverOptions.mode === 'sync' ? 'validateSync' : 'validate'\n      ](\n        values,\n        Object.assign({ abortEarly: false }, schemaOptions, { context }),\n      );\n\n      options.shouldUseNativeValidation && validateFieldsNatively({}, options);\n\n      return {\n        values: result,\n        errors: {},\n      };\n    } catch (e: any) {\n      return {\n        values: {},\n        errors: toNestError(\n          parseErrorSchema(\n            e,\n            !options.shouldUseNativeValidation &&\n              options.criteriaMode === 'all',\n          ),\n          options,\n        ),\n      };\n    }\n  };\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\n\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none'\n}, ownerState.variant === 'rounded' && {\n  borderRadius: theme.shape.borderRadius\n}, ownerState.variant === 'square' && {\n  borderRadius: 0\n}, ownerState.colorDefault && {\n  color: theme.palette.background.default,\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n}));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\n\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\n\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  let children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(AvatarImg, _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      ownerState: ownerState,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;"],"names":["AppTextInput","props","useController","defaultValue","fieldState","field","multiline","rows","type","fullWidth","size","variant","error","helperText","message","registerValidationSchema","yup","shape","user","username","required","email","password","matches","profile","firstName","lastName","phone1","phone2","passwordConfirmation","oneOf","Register","schema","schemaOptions","resolverOptions","navigate","useNavigate","useForm","mode","resolver","values","context","options","Object","assign","abortEarly","result","shouldUseNativeValidation","validateFieldsNatively","errors","e","toNestError","validateAllFieldCriteria","criteriaMode","inner","reduce","previous","path","types","messages","appendErrors","concat","handleSubmit","control","formState","isValid","isSubmitting","Box","className","Container","component","Paper","maxWidth","sx","display","flexDirection","alignItems","p","Avatar","m","bgcolor","LockOutlined","Typography","color","onSubmit","data","userItem","console","log","agent","then","toast","catch","Grid","container","spacing","item","xs","name","label","md","LoadingButton","disabled","loading","mt","mb","createSvgIcon","_jsx","d","_excluded","AvatarRoot","styled","slot","overridesResolver","styles","ownerState","root","colorDefault","theme","_extends","position","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","palette","background","default","backgroundColor","grey","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","Person","fallback","React","inProps","ref","useThemeProps","alt","childrenProp","children","imgProps","sizes","src","srcSet","other","_objectWithoutPropertiesLoose","loaded","crossOrigin","referrerPolicy","setLoaded","active","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","classes","slots","composeClasses","getAvatarUtilityClass","useUtilityClasses","as","clsx","generateUtilityClass","avatarClasses","generateUtilityClasses"],"sourceRoot":""}