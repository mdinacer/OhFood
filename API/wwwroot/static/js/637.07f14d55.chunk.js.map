{"version":3,"file":"static/js/637.07f14d55.chunk.js","mappings":"oQAae,SAASA,IACpB,OAAqCC,EAAAA,EAAAA,KAAe,SAACC,GAAD,OAAWA,EAAMC,YAA9DC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,gBACZC,GAAWC,EAAAA,EAAAA,MAQjB,SAASC,EAAT,GAAsC,IAAvBL,EAAsB,EAAtBA,SACX,OACI,UAACM,EAAA,EAAD,CACIC,UAAU,iBACVC,GAAI,CACAC,SAAU,WACVC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WACZC,aAAc,CAACC,GAAI,EAAGC,GAAI,IARlC,WAWI,SAACV,EAAA,EAAD,CACIC,UAAU,WACVU,UAAU,MACVC,IAAKlB,EAASmB,cAElB,UAACC,EAAA,EAAD,CACIb,UAAU,iBACVC,GAAI,CACAa,MAAO,QACPC,GAAI,GAJZ,WAOI,wBAAKtB,EAASuB,SACd,uBACKvB,EAASwB,oBAO9B,OAxCAC,EAAAA,EAAAA,YAAU,WACDvB,GACDC,GAASuB,EAAAA,EAAAA,QAEd,CAACxB,EAAiBC,IAoChBD,GAED,UAACkB,EAAA,EAAD,CAAWZ,GAAI,CAACmB,GAAI,GAApB,WACI,SAACC,EAAA,EAAD,CACIC,QAAQ,KACRrB,GAAI,CACAsB,cAAe,YACfC,GAAI,GACJC,GAAI,GALZ,2BAUA,SAAC1B,EAAA,EAAD,CAAKE,GAAI,CAACyB,SAAU,SAAUN,GAAI,GAAlC,UACI,SAAC,IAAD,UACK1B,EAAUiC,KAAI,SAAClC,EAAUmC,GAAX,OACX,SAAC9B,EAAD,CAAcL,SAAUA,GAAbmC,cAhBF,SAACC,EAAA,EAAD","sources":["features/home/Announces.tsx"],"sourcesContent":["import {Box, Container, Typography} from \"@mui/material\";\nimport Carousel from \"react-material-ui-carousel\";\nimport \"./Announces.scss\";\nimport {useAppDispatch, useAppSelector} from \"../../app/store/configureStore\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport {Announce} from \"../../app/models/announce\";\nimport {useEffect} from \"react\";\nimport {fetchAnnouncesAsync} from \"../../app/slices/announceSlice\";\n\ninterface ItemProps {\n    announce: Announce;\n}\n\nexport default function Announces() {\n    const {announces, announcesLoaded} = useAppSelector((state) => state.announce);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (!announcesLoaded) {\n            dispatch(fetchAnnouncesAsync())\n        }\n    }, [announcesLoaded, dispatch])\n\n    function Item({announce}: ItemProps) {\n        return (\n            <Box\n                className=\"item-container\"\n                sx={{\n                    position: \"relative\",\n                    height: \"100%\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"flex-end\",\n                    borderRadius: {xs: 2, md: 3},\n                }}\n            >\n                <Box\n                    className=\"item-img\"\n                    component=\"img\"\n                    src={announce.pictureUrl}\n                />\n                <Container\n                    className=\"text-container\"\n                    sx={{\n                        color: \"white\",\n                        my: 4,\n                    }}\n                >\n                    <h2>{announce.title}</h2>\n                    <p>\n                        {announce.description}\n                    </p>\n                </Container>\n            </Box>\n        );\n    }\n\n    if (!announcesLoaded) return <LoadingComponent/>;\n    return (\n        <Container sx={{py: 4}}>\n            <Typography\n                variant=\"h3\"\n                sx={{\n                    textTransform: \"uppercase\",\n                    pt: 10,\n                    mb: 2,\n                }}\n            >\n                Our Services\n            </Typography>\n            <Box sx={{overflow: \"hidden\", py: 3}}>\n                <Carousel>\n                    {announces.map((announce, i) => (\n                        <Item key={i} announce={announce}/>\n                    ))}\n                </Carousel>\n            </Box>\n        </Container>\n    );\n}\n\n"],"names":["Announces","useAppSelector","state","announce","announces","announcesLoaded","dispatch","useAppDispatch","Item","Box","className","sx","position","height","display","justifyContent","alignItems","borderRadius","xs","md","component","src","pictureUrl","Container","color","my","title","description","useEffect","fetchAnnouncesAsync","py","Typography","variant","textTransform","pt","mb","overflow","map","i","LoadingComponent"],"sourceRoot":""}